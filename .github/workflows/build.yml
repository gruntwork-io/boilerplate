name: Build

on:
  workflow_call:

jobs:
  build:
    name: Build (${{ matrix.os }}/${{ matrix.arch }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: darwin
            arch: amd64
          - os: darwin
            arch: arm64
          - os: linux
            arch: "386"
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: windows
            arch: "386"
          - os: windows
            arch: amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Use mise to install dependencies
        uses: jdx/mise-action@v2
        with:
          version: 2025.8.16
          experimental: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: go-cache-paths
        run: |
          echo "go-build=$(go env GOCACHE)" >> "$GITHUB_OUTPUT"

      - name: Go Build Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}-${{ matrix.os }}-${{ matrix.arch }}

      - name: Build Boilerplate
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          OUTPUT="bin/boilerplate_${GOOS}_${GOARCH}"
          if [[ "${GOOS}" == "windows" ]]; then
            OUTPUT="${OUTPUT}.exe"
          fi
          mkdir -p bin
          vtag=$(git describe --tags --abbrev=12 --dirty --broken)
          go build -o "${OUTPUT}" \
            -ldflags "-X github.com/gruntwork-io/go-commons/version.Version=${vtag} -extldflags '-static'" \
            .

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: boilerplate_${{ matrix.os }}_${{ matrix.arch }}
          path: bin/boilerplate_${{ matrix.os }}_${{ matrix.arch }}*
