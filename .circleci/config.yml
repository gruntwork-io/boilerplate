defaults: &defaults
  machine: true
  environment:
    GRUNTWORK_INSTALLER_VERSION: v0.0.36
    MODULE_CI_VERSION: v0.43.1
    TERRAFORM_VERSION: 1.0.11
    TERRAGRUNT_VERSION: v0.36.1
    PACKER_VERSION: NONE
    GOLANG_VERSION: "1.17"
    GO111MODULE: auto

version: 2.1
jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - run: &install_gruntwork_tooling
          name: install dependencies
          command: |
            # Install the gruntwork-module-circleci-helpers and use it to configure the build environment and run tests.
            curl -Ls https://raw.githubusercontent.com/gruntwork-io/gruntwork-installer/master/bootstrap-gruntwork-installer.sh | bash /dev/stdin --version "${GRUNTWORK_INSTALLER_VERSION}"
            gruntwork-install --module-name "gruntwork-module-circleci-helpers" --repo "https://github.com/gruntwork-io/terraform-aws-ci" --tag "${MODULE_CI_VERSION}"
            gruntwork-install --module-name "git-helpers" --repo "https://github.com/gruntwork-io/terraform-aws-ci" --tag "${MODULE_CI_VERSION}"
            configure-environment-for-gruntwork-module \
              --terraform-version ${TERRAFORM_VERSION} \
              --terragrunt-version ${TERRAGRUNT_VERSION} \
              --packer-version ${PACKER_VERSION} \
              --go-version ${GOLANG_VERSION}

            go get -u github.com/jstemmer/go-junit-report
      - run:
          name: run tests
          command: |
            mkdir -p /tmp/logs/results
            # Some unit tests depend on a version being set, so here we pass in the ldflags to set the version to the
            # expected test string.
            run-go-tests --path . --timeout 1h --packages "-ldflags '-X github.com/gruntwork-io/go-commons/version.Version=v1.33.7' ./..." \
                                                                                                                                          | tee /tmp/logs/all.log
          no_output_timeout: 3600s


      # Store junit test result so it shows up in the CircleCI ui
      - run:
          # Use go-junit-report to generate a junit report instead of terratest log parser, as the logs for boilerplate
          # do not respect the logging mechanism that the log parser looks for.
          name: parse logs
          command: "cat /tmp/logs/all.log | go-junit-report > /tmp/logs/results/results.xml"
          when: always
      - store_test_results:
          path: /tmp/logs

  deploy:
    <<: *defaults
    steps:
      - checkout
      - run:
          <<: *install_gruntwork_tooling

      - run: go get github.com/mitchellh/gox

      - run:
          name: release assets
          command: |
            # If a new release is tagged in GitHub, build the binaries and upload them to GitHub.
            build-go-binaries \
              --app-name boilerplate \
              --dest-path bin \
              --ld-flags "-X github.com/gruntwork-io/go-commons/version.Version=$CIRCLE_TAG"

            upload-github-release-assets bin/*

workflows:
  version: 2
  build-and-test:
    jobs:
      - test:
          context:
            - Gruntwork Admin
          filters:
            tags:
              only: /^v.*/
      - deploy:
          context:
            - Gruntwork Admin
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
